<?php

/**
 * @file
 * jReject install file
 *
 * This file contains all the installation functions used by the module.
 * Mostly it sets sane defaults.
 *
 * @author Domenic Santangelo (entendu) http://drupal.org/user/173461
 *
 */

/**
 * Implements hook_install().
 */
function jreject_install() {
  $options_alpha = array(
    'enable' => 1,
    'header' => 'Did you know that your Internet Browser is out of date?',
    'paragraph1' => 'Your browser is out of date, and may not be compatible with our website. A list of the most popular web browsers can be found below.',
    'paragraph2' => 'Just click on the icons to get to the download page:',
    'closeMessage' => 'By closing this window you acknowledge that your experience on this website may be degraded.',
    'closeLink' => 'Close This Window',
    'closeURL' => '#',
  );
  variable_set('jreject_options_alpha', $options_alpha);

  $options_beta = array(
    'close' => 1,
    'closeESC' => 1,
    'closeCookie' => 0,
    'overlayBgColor' => '#000',
    'overlayOpacity' => '0.8',
    'fadeInTime' => 'fast',
    'fadeOutTime' => 'fast',
  );
  variable_set('jreject_options_beta', $options_beta);

  $alts = array(
    'msie' => 1,
    'firefox' => 1,
    'safari' => 1,
    'opera' => 1,
    'chrome' => 1,
  );
  variable_set('jreject_browser_alternatives', $alts);
}


/**
 * Implements hook_uninstall().
 */
function jreject_uninstall() {
  variable_del('jreject_browser_config');
  variable_del('jreject_options_alpha');
  variable_del('jreject_options_beta');
  variable_del('jreject_browser_alternatives');
  variable_del('jreject_enable');
}

/**
 * Implements hook_requirements().
 */
function jreject_requirements($phase) {
  $requirements = array();
  $t = get_t();
  $title = $t('jReject library');

  // Only output errors on the status report. Don't block installation or updates.
  if ($phase === 'runtime') {
    $jreject_library = libraries_detect('jreject');
    $enabled = (bool) variable_get('jreject_enable', FALSE);

    if ($jreject_library['installed'] && $enabled) {
      $requirements['jreject'] = array(
        'title' => $title,
        'value' => $t('Version @version', array('@version' => $jreject_library['version'])),
        'severity' => REQUIREMENT_OK,
      );
    }
    elseif ($jreject_library['installed'] && !$enabled) {
      $requirements['jreject'] = array(
        'title' => $title,
        'value' => $t('Library version @version installed, but it is disabled.', array(
          '@version' => $jreject_library['version'],
        )),
        'description' => $t('The jReject library is installed, but it is disabled in the jReject module configuration. Enable it in <a href="@link">the jReject module general configuration</a>.', array(
          '@link' => url('admin/config/system/jreject'),
        )),
        'severity' => REQUIREMENT_WARNING,
      );
    }
    else {
      $requirements['jreject'] = array(
        'title' => $title,
        'value' => $jreject_library['error'],
        'description' => $jreject_library['error message'] . '<br />' . t(
          'The <a href="@module_url">jReject module</a> needs this library to function properly. <a href="@download_url">Download it</a> and install it to <code>@location</code>.',
          array(
            '@module_url' => 'https://www.drupal.org/project/jreject',
            '@download_url' => $jreject_library['download url'],
            '@location' => 'sites/all/libraries/jreject',
          )
        ),
        'severity' => REQUIREMENT_ERROR,
      );
    }
  }

  return $requirements;
}

/**
 * Update browser config.
 */
function jreject_update_7001() {
  $jreject_reject_browsers = jreject_get_reject_browsers();

  $jreject_browser_config = variable_get('jreject_browser_config', array());
  if (!empty($jreject_browser_config)) {
    foreach ($jreject_browser_config as $browser_name => $values) {
      if (isset($jreject_reject_browsers[$browser_name])) {
        $reject_version = 0;
        foreach ($values as $version => $enabled) {
          if ($enabled) {
            $reject_version = $version;
          }
        }
        if ($reject_version) {
          $jreject_reject_browsers[$browser_name]['enabled'] = 1;
          $jreject_reject_browsers[$browser_name]['reject_version'] = $reject_version;
        }
        else {
          $jreject_reject_browsers[$browser_name]['enabled'] = 0;
        }
      }
    }
  }
  // Save new setting.
  variable_set('jreject_reject_browsers', $jreject_reject_browsers);

  // Delete old setting.
  variable_del('jreject_browser_config');
}

/**
 * Update browser alternatives.
 */
function jreject_update_7002() {
  $alts = array(
    'msie' => 1,
    'firefox' => 1,
    'safari' => 1,
    'opera' => 1,
    'chrome' => 1,
  );
  variable_set('jreject_browser_alternatives', $alts);
}